{"ast":null,"code":"/**\n * Creates a type that is T with removed properties that are functions with names beginning with `on`.\n * Note that it does not exactly follow the logic of `omitEventHandlers` as it also removes fields where\n * `on` is followed by a non-letter character,\n */\n\n/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nexport default function omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n\n  var result = {};\n  Object.keys(object).filter(function (prop) {\n    return !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function');\n  }).forEach(function (prop) {\n    result[prop] = object[prop];\n  });\n  return result;\n}","map":{"version":3,"sources":["C:/Users/Owner/Documents/react-projects/styled components/node_modules/@mui/base/utils/omitEventHandlers.js"],"names":["omitEventHandlers","object","undefined","result","Object","keys","filter","prop","match","forEach"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,iBAAT,CAA2BC,MAA3B,EAAmC;AAChD,MAAIA,MAAM,KAAKC,SAAf,EAA0B;AACxB,WAAO,EAAP;AACD;;AAED,MAAMC,MAAM,GAAG,EAAf;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,MAApB,CAA2B,UAAAC,IAAI;AAAA,WAAI,EAAEA,IAAI,CAACC,KAAL,CAAW,UAAX,KAA0B,OAAOP,MAAM,CAACM,IAAD,CAAb,KAAwB,UAApD,CAAJ;AAAA,GAA/B,EAAoGE,OAApG,CAA4G,UAAAF,IAAI,EAAI;AAClHJ,IAAAA,MAAM,CAACI,IAAD,CAAN,GAAeN,MAAM,CAACM,IAAD,CAArB;AACD,GAFD;AAGA,SAAOJ,MAAP;AACD","sourcesContent":["/**\n * Creates a type that is T with removed properties that are functions with names beginning with `on`.\n * Note that it does not exactly follow the logic of `omitEventHandlers` as it also removes fields where\n * `on` is followed by a non-letter character,\n */\n\n/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nexport default function omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}"]},"metadata":{},"sourceType":"module"}