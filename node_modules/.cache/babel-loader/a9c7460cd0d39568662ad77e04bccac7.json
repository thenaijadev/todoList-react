{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"className\", \"disabled\", \"component\", \"components\", \"componentsProps\", \"label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUnstyledUtilityClass } from './menuItemUnstyledClasses';\nimport useMenuItem from './useMenuItem';\nimport composeClasses from '../composeClasses';\nimport useSlotProps from '../utils/useSlotProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getUtilityClasses(ownerState) {\n  var disabled = ownerState.disabled,\n      focusVisible = ownerState.focusVisible;\n  var slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getMenuItemUnstyledUtilityClass, {});\n}\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base/react-menu/)\n *\n * API:\n *\n * - [MenuItemUnstyled API](https://mui.com/base/api/menu-item-unstyled/)\n */\n\n\nvar MenuItemUnstyled = /*#__PURE__*/React.forwardRef(function MenuItemUnstyled(props, ref) {\n  var _ref;\n\n  var children = props.children,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabledProp = _props$disabled === void 0 ? false : _props$disabled,\n      component = props.component,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      label = props.label,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useMenuItem = useMenuItem({\n    disabled: disabledProp,\n    ref: ref,\n    label: label\n  }),\n      getRootProps = _useMenuItem.getRootProps,\n      disabled = _useMenuItem.disabled,\n      focusVisible = _useMenuItem.focusVisible;\n\n  var ownerState = _extends({}, props, {\n    disabled: disabled,\n    focusVisible: focusVisible\n  });\n\n  var classes = getUtilityClasses(ownerState);\n  var Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'li';\n  var rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    className: [classes.root, className],\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItemUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * @ignore\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the menu item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string\n} : void 0;\nexport default MenuItemUnstyled;","map":{"version":3,"sources":["C:/Users/Owner/Documents/react-projects/styled components/node_modules/@mui/base/MenuItemUnstyled/MenuItemUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","getMenuItemUnstyledUtilityClass","useMenuItem","composeClasses","useSlotProps","jsx","_jsx","getUtilityClasses","ownerState","disabled","focusVisible","slots","root","MenuItemUnstyled","forwardRef","props","ref","_ref","children","className","disabledProp","component","components","componentsProps","label","other","getRootProps","classes","Root","rootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","process","env","NODE_ENV","propTypes","node","string","shape","oneOfType","func","object","bool"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,IAAMC,SAAS,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,UAA1B,EAAsC,WAAtC,EAAmD,YAAnD,EAAiE,iBAAjE,EAAoF,OAApF,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,+BAAT,QAAgD,2BAAhD;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,SAASC,iBAAT,CAA2BC,UAA3B,EAAuC;AACrC,MACEC,QADF,GAGID,UAHJ,CACEC,QADF;AAAA,MAEEC,YAFF,GAGIF,UAHJ,CAEEE,YAFF;AAIA,MAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAASH,QAAQ,IAAI,UAArB,EAAiCC,YAAY,IAAI,cAAjD;AADM,GAAd;AAGA,SAAOP,cAAc,CAACQ,KAAD,EAAQV,+BAAR,EAAyC,EAAzC,CAArB;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAMY,gBAAgB,GAAG,aAAad,KAAK,CAACe,UAAN,CAAiB,SAASD,gBAAT,CAA0BE,KAA1B,EAAiCC,GAAjC,EAAsC;AAC3F,MAAIC,IAAJ;;AAEA,MACEC,QADF,GAQIH,KARJ,CACEG,QADF;AAAA,MAEEC,SAFF,GAQIJ,KARJ,CAEEI,SAFF;AAAA,wBAQIJ,KARJ,CAGEN,QAHF;AAAA,MAGYW,YAHZ,gCAG2B,KAH3B;AAAA,MAIEC,SAJF,GAQIN,KARJ,CAIEM,SAJF;AAAA,0BAQIN,KARJ,CAKEO,UALF;AAAA,MAKEA,UALF,kCAKe,EALf;AAAA,8BAQIP,KARJ,CAMEQ,eANF;AAAA,MAMEA,eANF,sCAMoB,EANpB;AAAA,MAOEC,KAPF,GAQIT,KARJ,CAOES,KAPF;AAAA,MASMC,KATN,GASc5B,6BAA6B,CAACkB,KAAD,EAAQjB,SAAR,CAT3C;;AAWA,qBAIII,WAAW,CAAC;AACdO,IAAAA,QAAQ,EAAEW,YADI;AAEdJ,IAAAA,GAAG,EAAHA,GAFc;AAGdQ,IAAAA,KAAK,EAALA;AAHc,GAAD,CAJf;AAAA,MACEE,YADF,gBACEA,YADF;AAAA,MAEEjB,QAFF,gBAEEA,QAFF;AAAA,MAGEC,YAHF,gBAGEA,YAHF;;AAUA,MAAMF,UAAU,GAAGZ,QAAQ,CAAC,EAAD,EAAKmB,KAAL,EAAY;AACrCN,IAAAA,QAAQ,EAARA,QADqC;AAErCC,IAAAA,YAAY,EAAZA;AAFqC,GAAZ,CAA3B;;AAKA,MAAMiB,OAAO,GAAGpB,iBAAiB,CAACC,UAAD,CAAjC;AACA,MAAMoB,IAAI,GAAG,CAACX,IAAI,GAAGI,SAAS,IAAI,IAAb,GAAoBA,SAApB,GAAgCC,UAAU,CAACM,IAAnD,KAA4D,IAA5D,GAAmEX,IAAnE,GAA0E,IAAvF;AACA,MAAMY,SAAS,GAAGzB,YAAY,CAAC;AAC7B0B,IAAAA,WAAW,EAAEF,IADgB;AAE7BG,IAAAA,YAAY,EAAEL,YAFe;AAG7BM,IAAAA,iBAAiB,EAAET,eAAe,CAACX,IAHN;AAI7BqB,IAAAA,sBAAsB,EAAER,KAJK;AAK7BN,IAAAA,SAAS,EAAE,CAACQ,OAAO,CAACf,IAAT,EAAeO,SAAf,CALkB;AAM7BX,IAAAA,UAAU,EAAVA;AAN6B,GAAD,CAA9B;AAQA,SAAO,aAAaF,IAAI,CAACsB,IAAD,EAAOhC,QAAQ,CAAC,EAAD,EAAKiC,SAAL,EAAgB;AACrDX,IAAAA,QAAQ,EAAEA;AAD2C,GAAhB,CAAf,CAAxB;AAGD,CA1CqC,CAAtC;AA2CAgB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvB,gBAAgB,CAACwB;AACzD;AADwC,EAEtC;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACEnB,EAAAA,QAAQ,EAAElB,SAAS,CAACsC,IATpB;;AAWA;AACF;AACA;AACEnB,EAAAA,SAAS,EAAEnB,SAAS,CAACuC,MAdrB;;AAgBA;AACF;AACA;AACElB,EAAAA,SAAS,EAAErB,SAAS,CAAC8B,WAnBrB;;AAqBA;AACF;AACA;AACER,EAAAA,UAAU,EAAEtB,SAAS,CAACwC,KAAV,CAAgB;AAC1BZ,IAAAA,IAAI,EAAE5B,SAAS,CAAC8B;AADU,GAAhB,CAxBZ;;AA4BA;AACF;AACA;AACEP,EAAAA,eAAe,EAAEvB,SAAS,CAACwC,KAAV,CAAgB;AAC/B5B,IAAAA,IAAI,EAAEZ,SAAS,CAACyC,SAAV,CAAoB,CAACzC,SAAS,CAAC0C,IAAX,EAAiB1C,SAAS,CAAC2C,MAA3B,CAApB;AADyB,GAAhB,CA/BjB;;AAmCA;AACF;AACA;AACA;AACElC,EAAAA,QAAQ,EAAET,SAAS,CAAC4C,IAvCpB;;AAyCA;AACF;AACA;AACA;AACEpB,EAAAA,KAAK,EAAExB,SAAS,CAACuC;AA7CjB,CAFF,GAgDI,KAAK,CAhDT;AAiDA,eAAe1B,gBAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"disabled\", \"component\", \"components\", \"componentsProps\", \"label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUnstyledUtilityClass } from './menuItemUnstyledClasses';\nimport useMenuItem from './useMenuItem';\nimport composeClasses from '../composeClasses';\nimport useSlotProps from '../utils/useSlotProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getUtilityClasses(ownerState) {\n  const {\n    disabled,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getMenuItemUnstyledUtilityClass, {});\n}\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base/react-menu/)\n *\n * API:\n *\n * - [MenuItemUnstyled API](https://mui.com/base/api/menu-item-unstyled/)\n */\n\n\nconst MenuItemUnstyled = /*#__PURE__*/React.forwardRef(function MenuItemUnstyled(props, ref) {\n  var _ref;\n\n  const {\n    children,\n    className,\n    disabled: disabledProp = false,\n    component,\n    components = {},\n    componentsProps = {},\n    label\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    getRootProps,\n    disabled,\n    focusVisible\n  } = useMenuItem({\n    disabled: disabledProp,\n    ref,\n    label\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    focusVisible\n  });\n\n  const classes = getUtilityClasses(ownerState);\n  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'li';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    className: [classes.root, className],\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItemUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * @ignore\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the menu item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string\n} : void 0;\nexport default MenuItemUnstyled;"]},"metadata":{},"sourceType":"module"}